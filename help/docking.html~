<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
       "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <link rel="shortcut icon" href="MMM_logo.png">
   <link rel="stylesheet" type="text/css" href="helpstyle.css">
   <title>MMM: Spin labeling and site scans</title>
</head>
<body>

<div class="pagetitle">Docking of monomers in a complex</div>

<div class="subsubtitle">Hierarchical links</div>

<pre class="links">
<A href="overview.html"> Overview </A> &bull; <A href="user_interface.html"> User interface </A> &bull; <A href="specialized.html"> Special tasks </A> &uarr;  |  &darr;  <A href="site_scan_window.html"> Site scan setup </A>  &bull; <A href="labeling_window.html"> Labeling conditions </A> </pre>

<div class="subtitle">Docking concept</div>
<h4>General concept</h4>
<p>
MMM performs a constraint driven rigid-body docking of (two) monomers in a complex. No further adjustments of the docked molecules as for example relaxation of the complex interface by molecular dynamics is performed. In this way, a user can see how well the monomers can be brought together using solely experimental information, and at the same time possibly judge how good available pool of experimental constraints is. Two docking algorithms are offered: a grid search and a non-linear fitting.

<h4>Grid search vs fitting</h4>
<p>
Both approaches persue the same goal of putting two rigid partners of a complex together satisfying given constraints in the best possible way. In the fitting approach, the whole space of possible mutual arrangements of the complex partners is not sampled. The algorithm advances throught the space governed by a certain oprimization criterion aiming to  locate fast the best solution (i.e. a global minimum on the error surface). Because the rigid body docking is a multidimensional task (6 free parameters in a general heterodimer case - 3 Euler angles and a 3-component translation vector in a cartesian space), practically any existing fitting algorithm is likely to end up in a local minimum of the error surface, especially if the surface is rather rough. Grid search can help with that problem. With this approach, space of mutual orientations of the complex partners is discretized into grids, and every grid is visited during a grid search run. With that, chances to miss a global solution are reduced, especially if chosen grid is sufficiently fine. On a contrary to fitting however, a grid search can be a very time consuming task (can last hours or days). One can combine the two approaches so that the grid search is performed first aiming to get close to the global minimum, and than the fitting is initiated from the best grid search model.</p>

<h4>Docking constraints</h4>
<p> An ultimate goal of the MMMDock is to support any kind of experimental constraints which would help in docking.<br>
In the current release (v. 2013) only EPR distance constraints in a form of a mean distance and a standard deviation are supported. Constraint support will be extended already in the next MMM release.</p>

<div class="subtitle">Working with MMMDock</div>

<h4>Constraints file</h4>

<p>
Constraints are organized in an ASCII file with *. dat extension. Examples of the constraints files can be found in the ...\tests\docking folder of your MMM installation. <br>
All strings starting with "%" are treated as comments and ignored while strings starting with "#" are keywoards with values.

Order in which the keywoards are given is irrelevant. A string &quot;#PDB pdb1 pdb2&quot; tells the programme that there are two monomers to be docked with pdb id's pdb1 and pdb2 (heterodimer case). Only one pdb_id given would correspond to a homodimer case. A string &quot;#DEER MTSL 175&quot; means that the type of constraints is DEER, a spin label used is MTS while the rotamer library to be used by MMM during docking should correspond to a frozen solution (indicated by &quot;175&quot;). An order in which two pdb id's are given defines which structure is fixed (the first one given) during docking and which is being moved (the second one). Constraints table follows. Record with a constraint may look like:  &quot;(A)65 (A)135  4.63  0.22&quot; specifying distance constraint between site 65 (chain A, structure pdb1) and site 135 (chain A, structure pdb2). IMPORTANT: the first column in the constraints table corresponds to the pdb_id  which is given first in the # PDB line. If no keyword for units is given, nanometers are assumed. Constraint file ends with the line # END (after that everything is skipped).</p>


<h4>MMMDock window</h4>

<p> Structures of monomers to be docked have to be loaded into MMM prior to calling the MMMDock window. For a homodimer case, one structure is necessary while for a heterodimer - two. In the freshly loaded window, press &quot;Load restraints list&quot; and choose desired list file. The program checks if the sites specified do exist in the structures and if sites are already labelled on previous steps (for other purpouses for example). If a site exist and is not labelled, it will be labelled upon loading the constraints list. When constraints are successfully loaded, more functionality becomes accessible. For a homodimer case, there is a choice of treating it as a homodimer (4 degrees of freedom, faster search), or as a heterodimer (6 degrees of freedom, longer search). For a heterodimer case there is no choice, and this option is deactivated. By default, the fitting is accessable first when the constraints are loaded. Switching between the fitting and the grid search approaches is done by chosing a corresponding radiobutton on the <em>Docking method</em> panel. <br>
To start fitting, give initial values for the Euler rotation and the translation vector in the <em>start values</em> panel and press the "Run docking" button. A popup window will show a real-time performance of the fitting algorithm. When finished, the bestfit values are shown in the <em>best fit values</em> panel. If "Save docking statistics" and "Save transformed pdb's" checkboxes were checked (default behaviour), transformed complex partners will be saved as pdb files and the statistics of the docking session will also be saved (both under default names containing a reference to a real time moment). In the statistics file, the information about initial template, docking constraints and the docking result is given.<br>
For docking, the user is expected to provide start, end and the number of values for the Euler rotation angles and the translation vector. The grid size is automatically updated and shown in the &quot;Grid size&quot; window. If grid specified is very large, not only the computation time is large, but also the size of the internal grid variable can become too large to keep it in the memory. For such cases, a Stack mode is initiated. The stack is the number of grid models which are kept in the memory during the grid search. Only good model may enter the stack. With that, every grid point is visited and evaluated, but only a number limited by the stack size variable is returned. Grids with less then 1000000 points are small so that the Stack mode becomes disabled.  By checking &quot;Automatically fit from the best grid point&quot; the user initiates automatic fitting from the best found grid point at the end of grid searching. Docking is initiated by hitting the "Run docking" button. Important steps and states of the docking session are indicated in the MMM Message board.<br>
When the user quites MMMDock by hitting "Finish/exit" button, the programme checks if docking results were saved. One may perform numerous docking attemps without closing the MMMDock window, and if "Save docking statistics" and "Save transformed pdb's" are activated, saving occures on every run. But if no saving was selected, then hitting the "Finish/exit" botton initiates saving the results of the last docking run.

<div class="subsubtitle">Version</div>
<div class="comment">version 2013, edited 2013/09/06</div>
</body>
</html>

